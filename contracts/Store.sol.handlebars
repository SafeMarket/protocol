pragma solidity {{solidityVersion}};

import "forumable.sol";
import "orderable.sol";
import "aliasable.sol";
import "approvesAliases.sol";
import "Order.sol";

contract Store is forumable, aliasable, orderable, approvesAliases {

  function () payable {}

  {{#each schemas.Store.variables}}
  {{>variable.sol variable=this}}
  {{/each}}

  {{#each schemas.Store.mappings}}
  {{>mapping.sol mapping=this}}
  {{/each}}

  {{#each schemas.Store.structArrays}}
  {{>structArray.sol struct=this}}
  {{/each}}

  function restoreProductUnits(uint index, uint quantity) requireOwnership {
    Products[index].units = Products[index].units + quantity;
  }

  function depleteProductUnits(uint index, uint quantity) requireOwnership {
    if(Products[index].units < quantity) throw;
    Products[index].units = Products[index].units - quantity;
  }

  function addMessage(address orderAddr, bytes32 fileHash) requireOwnership {
    Order order = Order(orderAddr);
    order.addMessage(fileHash);
  }

  //TODO: cancel needs some tests
  function cancel(address orderAddr) requireOwnership {
    Order(orderAddr).cancel();
  }

  function markAsShipped(address orderAddr) requireOwnership {
    Order order = Order(orderAddr);

    uint productsLength = order.getProductsLength();

    for(uint i = 0; i < productsLength; i++) {
      uint index = order.getProductIndex(i);
      uint quantity = order.getProductQuantity(i);
      depleteProductUnits(index, quantity);
    }
    order.markAsShipped();
    verifiedBuyers[Order(orderAddr)] = true;
  }

  function addReview(uint8 score, bytes32 fileHash) {
    if(verifiedBuyers[msg.sender])
    throw;

    //TODO: magic numbers are bad, 5 should be a constant
    if(score > 5)
    throw;

    Review memory review;
    if(reviewIndices[msg.sender] == 0) {
      reviewIndices[msg.sender] = Reviews.length;
      Reviews.length = Reviews.length+1;
    }

    review.blockNumber = block.number;
    review.score = score;
    review.fileHash = fileHash;

    Reviews[reviewIndices[msg.sender]] = review;
  }
}