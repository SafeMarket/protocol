/* START {{struct.name}} structs */

struct {{struct.name}}{
  {{#each struct.variables}}
  {{type}} {{name}};
  {{/each}}
}

{{struct.name}}[] public {{struct.arrayName}};

function {{struct.getLengthName}}() constant returns (uint) {
  return {{struct.arrayName}}.length;
}

function {{struct.addName}}(
  {{>inputs.sol variables=struct.variables}}
) require_isOwner(msg.sender) {
  {{struct.arrayName}}.push({{struct.name}}(
  {{>names.sol variables=struct.variables}}
  ));
}

{{#each struct.variables}}
function {{getMethodName}} (uint index) constant returns ({{type}} {{name}}) {
  return {{../struct.arrayName}}[index].{{name}};
}

function {{setMethodName}} (uint index, {{type}} value) require_isOwner(msg.sender) {
  {{../struct.arrayName}}[index].{{name}} = value;
}
{{/each}}
/* END {{struct.name}} structs */
